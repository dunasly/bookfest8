= スマートフォン向けアプリでの海外課金

== この文章について
課金を導入しているスマートフォン向けアプリを海外展開するとき、様々な対応をアプリに行う必要があります。ここでは課金機能に焦点を当て、知っておくと良い点をご紹介します。

== 海外通貨とその金額について

=== iOSの場合
iOSでは販売価格はTier表に従います。価格はAppleが決めますが、販売前にどのような金額で販売されるか知ることが可能です。ただし料金は為替変動などを理由にApple側のタイミングで変更されます。

=== Androidの場合
Androidでは基準通貨からGoogleが定めるレートで変換した値が使われます。自分で設定することも可能ですが、通常はGoogleに任せた方が良いでしょう。

== ユーザー購入時に表示する価格
価格はプラットフォーム側の決定によって変動するものなので、必ずクライアント側で取得する必要があります。これは国内向けの場合も同じですプロバイダがどちらの場合も、自分で値を固定せずストア側の値を使うのは日本の場合と同じです。

//table[envgetterbyplatform][プラットフォーム別の各種値取得方法]{
.	.	iOS	Android
-------------------------------------------------------------
端末設定	国	NSLocale	java.util.Locale
.	通貨	NSLocale	java.util.Localeを使用した@<br>{}java.util.Currency
課金時の情報	国	SKProduct	無し
.	通貨	priceLocale	getSkuDetails
.	価格表記	SKproductのpriceを@<br>{}priceLocale値を元に変換	getSkuDetailsのprice
.	価格	SKProduct price	getSkuDetailsの@<br>{}price_amount_micros
//}

 * 補足
 ** Androidでは端末の国設定を代用するのが現実的だと思われます。
 ** 価格表記では、通貨記号込みで3桁区切り等にも対応した表記が取得可能です。
 ** Androidの価格の値は、価格を1,000,000倍した値が取得されます。計算処理用にはこちらの値を使います。

== 世界に通貨について
日本と海外で通貨に関するルールが異なる場合に注意しましょう。いくつかポイントをご紹介します。

 * インドネシアのルピアは桁が多くなるので、それを見越した表示幅を確保しましょう。例えば執筆時点(2019年7月末)では1円は約130ルピアでした。これは1万円だと1300000ルピアになる計算です。このような桁数まで考慮する必要があります。
 * 桁区切りはドット,カンマ,スペースと、様々なものがあります。小数点もドットとは限らず、カンマな事もあります。この辺は意識しなくても問題ありませんが、自分で数字を読むときに注意しましょう。例えばルピアの桁区切りはドットです。
 * 簡易的に為替レートを知りたい時には、GoogleSpreadsheetsで取得するのが簡単です。正確性やソースは不明なので概算計算までしか使えませんが、それでも十分です。ISO 4217定義の通貨を確認しましたが、大半を変換できます。

//list[googlespreadsheetsfinancesample][GoogleSpreadsheetsでの為替取得例]{
=INDEX(GoogleFinance("USDJPY","price", "2019/01/01"), 2, 2)
//}

== 経理処理
 * 海外課金においては獲得と消費に関する内部処理も変わる可能性があるため、システム設計前から経理と連携を取ることが重要です。
 * VAT定義が欲しい場合があると思いますが、AppleやGoogleのシステムからその割合を取得することはできません。必要ならば自前でやる必要があります。
 * 課金システムに関わる価格・VAT適用ルール変更は(主にAppleから)メールが来るため、そちらを参照しましょう。

== まとめ
海外課金周りは細かい話が多くありますが、基本的な部分は国内向けの課金と同じです。もろもろ調べて海外展開を実現していきましょう。

